/*
  Service Worker for offline support and caching using Workbox
  - Precache static assets (built by Vite)
  - Runtime cache for rants API (adjust URL as needed)
*/

import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute, setCatchHandler } from 'workbox-routing';
import { StaleWhileRevalidate, CacheFirst, NetworkFirst } from 'workbox-strategies';

// Precache all of the assets generated by Vite (self.__WB_MANIFEST is injected at build time)
precacheAndRoute(self.__WB_MANIFEST || []);

// Cache static assets (images, fonts, etc.)
registerRoute(
    ({ request }) => ['image', 'font', 'style', 'script'].includes(request.destination),
    new CacheFirst({
        cacheName: 'static-assets',
        plugins: []
    })
);

// Cache API requests for rants (NetworkFirst: always try network, fallback to cache)
registerRoute(
    ({ url }) => url.pathname.startsWith('/api/rants') || url.pathname.includes('/rest/v1/rants'),
    new NetworkFirst({
        cacheName: 'rants-api',
        networkTimeoutSeconds: 3,
        plugins: []
    })
);

// Cache HTML navigation requests (for SPA routes)
registerRoute(
    ({ request }) => request.mode === 'navigate',
    new NetworkFirst({
        cacheName: 'pages',
        networkTimeoutSeconds: 3,
    })
);

// Offline fallback for navigation requests
setCatchHandler(async ({ event }) => {
    if (event.request.destination === 'document') {
        return caches.match('/offline.html', { ignoreSearch: true });
    }
    return Response.error();
});
